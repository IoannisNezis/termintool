workflow:
  rules:
  # always run on commit tags
  - if: $CI_COMMIT_TAG
    when: always
    # don't run on master/main commits
  - if: $CI_COMMIT_REF_NAME == "master"
    when: never
  - if: $CI_COMMIT_REF_NAME == "main"
    when: never
  # run on merge requests
  - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: always
     # else don't run
  - when: never

stages:
  - build
  - deploy

build-image:
  stage: build
  image: docker:stable
  variables:
    IMAGE_LABELS: >
      --label vcs-url=$CI_PROJECT_URL
      --label com.gitlab.ci.builder=$GITLAB_USER_EMAIL
      --label com.gitlab.ci.pipeline=$CI_PROJECT_URL/pipelines/$CI_PIPELINE_ID
      --label com.gitlab.ci.ref=$CI_BUILD_REF_NAME
      --label com.gitlab.ci.build=$CI_PROJECT_URL/builds/$CI_BUILD_ID
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

    # build latest django image
    - 'echo "push target: $CI_APPLICATION_REPOSITORY/app:$CI_APPLICATION_TAG"'
    - docker build $IMAGE_LABELS --label build-date=`date -Iseconds` --target=django --pull -t "$CI_REGISTRY_IMAGE/app:$CI_APPLICATION_TAG" --build-arg CI_COMMIT_TAG --build-arg CI_COMMIT_SHA --build-arg CI_COMMIT_SHORT_SHA --file ./build/Containerfile ./
    - 'echo "docker push $CI_REGISTRY_IMAGE/app:$CI_APPLICATION_TAG"'
    - docker push "$CI_REGISTRY_IMAGE/app:$CI_APPLICATION_TAG"

    # build latest nginx image
    - 'echo "push target: $CI_APPLICATION_REPOSITORY/nginx:$CI_APPLICATION_TAG"'
    - docker build $IMAGE_LABELS --label build-date=`date -Iseconds` --target=nginx --pull -t "$CI_REGISTRY_IMAGE/nginx:$CI_APPLICATION_TAG" --build-arg CI_COMMIT_TAG --build-arg CI_COMMIT_SHA --build-arg CI_COMMIT_SHORT_SHA --file ./build/Containerfile ./
    - 'echo "docker push $CI_REGISTRY_IMAGE/nginx:$CI_APPLICATION_TAG"'
    - docker push "$CI_REGISTRY_IMAGE/nginx:$CI_APPLICATION_TAG"

deploy-image:
  stage: deploy
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

    - 'echo "push as latest: $CI_APPLICATION_REPOSITORY/app:$CI_APPLICATION_TAG"'
    # if we are on master, set this as latest
    - docker pull "$CI_REGISTRY_IMAGE/app:$CI_APPLICATION_TAG"
    - docker tag "$CI_REGISTRY_IMAGE/app:$CI_APPLICATION_TAG" "$CI_REGISTRY_IMAGE/app:latest"
    - docker push "$CI_REGISTRY_IMAGE/app:latest"

    - 'echo "push as latest: $CI_APPLICATION_REPOSITORY/nginx:$CI_APPLICATION_TAG"'
    # if we are on master, set this as latest
    - docker pull "$CI_REGISTRY_IMAGE/nginx:$CI_APPLICATION_TAG"
    - docker tag "$CI_REGISTRY_IMAGE/nginx:$CI_APPLICATION_TAG" "$CI_REGISTRY_IMAGE/nginx:latest"
    - docker push "$CI_REGISTRY_IMAGE/nginx:latest"

  only:
  - tags



before_script:
  - | 
    export DATE_STRING=`date +%y-%m-%d`

    if [ -z $CI_COMMIT_TAG ]
    then
    # NO COMMIT TAG
    export CI_APPLICATION_TAG="t$DATE_STRING-$CI_COMMIT_SHORT_SHA"
    else
    # COMMIT TAG FOUND
    export CI_APPLICATION_TAG=$CI_COMMIT_TAG

    fi