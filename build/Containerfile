# syntax=docker/dockerfile:1
FROM python:3.10 AS build

COPY ./requirements.txt /tmp/requirements.txt

RUN pip install --no-warn-script-location --prefix=/install -r /tmp/requirements.txt
RUN pip install --no-warn-script-location --prefix=/install uwsgi
RUN pip freeze > /requirements.freeze.txt


FROM python:3.10-slim  AS django

LABEL authors="Ioannis Nezis <ioannis@nezis.de>"

ARG CI_COMMIT_SHORT_SHA
ENV CI_COMMIT_SHORT_SHA=$CI_COMMIT_SHORT_SHA

ARG CI_COMMIT_TAG
ENV CI_COMMIT_TAG=$CI_COMMIT_TAG

ARG CI_COMMIT_SHA
ENV CI_COMMIT_SHA=$CI_COMMIT_SHA

ENV PYTHONUNBUFFERED=1

WORKDIR /code

COPY ./django_src/ /code/
COPY ./build/app/uwsgi.ini /config/uwsgi/uwsgi.ini
COPY --from=build /install /usr/local
# required by the ci
COPY --from=build /requirements.freeze.txt /requirements.freeze.txt

RUN apt update
RUN apt install -y --no-install-recommends libxml2

COPY ./build/app/entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

RUN DJANGO_DEBUG=False python manage.py collectstatic --no-input

ENTRYPOINT ["/entrypoint.sh"]

CMD ["uwsgi", "--ini", "/config/uwsgi/uwsgi.ini"]

#################################
## frontend production environment
#################################

FROM nginx:mainline-alpine as nginx

ARG CI_COMMIT_TAG
ENV CI_COMMIT_TAG=$CI_COMMIT_TAG

ARG CI_COMMIT_SHA
ENV CI_COMMIT_SHA=$CI_COMMIT_SHA

ARG CI_COMMIT_SHORT_SHA
ENV CI_COMMIT_SHORT_SHA=$CI_COMMIT_SHORT_SHA

EXPOSE 8000

RUN rm -rf /etc/nginx/default.conf
RUN rm -rf /etc/nginx/sites-available/*


ADD ./build/nginx/nginx.conf /etc/nginx/conf.d/default.conf

COPY --from=django /static /static
